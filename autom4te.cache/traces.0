m4trace:configure.ac:48: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:48: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:48: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:48: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:48: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:48: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:48: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:48: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:48: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:65: -1- m4_include([m4/python.m4])
m4trace:m4/python.m4:63: -1- AU_DEFUN([AC_LANG_PYTHON], [AC_LANG(Python)])
m4trace:m4/python.m4:63: -1- AC_DEFUN([AC_LANG_PYTHON], [AC_DIAGNOSE([obsolete], [The macro `AC_LANG_PYTHON' is obsolete.
You should run autoupdate.])dnl
AC_LANG(Python)])
m4trace:m4/python.m4:109: -1- AC_DEFUN([AC_LANG_COMPILER(Python)], [AC_REQUIRE([PC_PROG_PYTHON])])
m4trace:m4/python.m4:117: -1- AC_DEFUN([PC_INIT], [PC_PROG_PYTHON([], [$1], [$2])
dnl If we found something, do a sanity check that the interpreter really
dnl has the version its name would suggest.
m4_ifval([PYTHON],
        [PC_PYTHON_VERIFY_VERSION([>=], [pc_min_ver], [],
                  [AC_MSG_FAILURE([No compatible Python interpreter found. If you're sure that you have one, try setting the PYTHON environment variable to the location of the interpreter.])])])
m4_ifval([PYTHON],
        [PC_PYTHON_VERIFY_VERSION([<=], [pc_max_ver], [],
                  [AC_MSG_FAILURE([No compatible Python interpreter found. If you're sure that you have one, try setting the PYTHON environment variable to the location of the interpreter.])])])
])
m4trace:m4/python.m4:133: -1- AC_DEFUN_ONCE([PC_PROG_PYTHON], [AC_ARG_VAR([PYTHON], [the Python interpreter])
dnl The default minimum version is 2.0
m4_define_default([pc_min_ver], m4_ifval([$2], [$2], [2.0]))
dnl The default maximum version is 3.3
m4_define_default([pc_max_ver], m4_ifval([$3], [$3], [4.0]))
dnl Build up a list of possible interpreter names. 
m4_define_default([_PC_PYTHON_INTERPRETER_LIST],
    [[python] \
dnl If we want some Python 3 versions (max version >= 3.0), 
dnl also search for "python3"
     m4_if(m4_version_compare(pc_max_ver, [2.9]), [1], [python3], []) \
dnl If we want some Python 2 versions (min version <= 2.7),
dnl also search for "python2".
     m4_if(m4_version_compare(pc_min_ver, [2.8]), [-1], [python2], []) \
dnl Construct a comma-separated list of interpreter names (python2.6, 
dnl python2.7, etc). We only care about the first 3 characters of the
dnl version strings (major-dot-minor; not 
dnl major-dot-minor-dot-bugfix[-dot-whatever])
     m4_foreach([pc_ver], 
                    m4_esyscmd_s(seq -s[[", "]] -f["[[%.1f]]"] m4_substr(pc_max_ver, [0], [3]) -0.1 m4_substr(pc_min_ver, [0], [3])),
dnl Remove python2.8 and python2.9 since they will never exist
                    [m4_bmatch(pc_ver, [2.[89]], [], [python]pc_ver)])])
dnl Do the actual search at last.
m4_ifval([$1],
	[AC_PATH_PROGS(PYTHON, [$1 _PC_PYTHON_INTERPRETER_LIST])],
	[AC_PATH_PROGS(PYTHON, [_PC_PYTHON_INTERPRETER_LIST])])
])
m4trace:m4/python.m4:166: -1- AC_DEFUN([PC_PYTHON_PROG_PYTHON_CONFIG], [AC_REQUIRE([PC_PROG_PYTHON])[]dnl
AC_ARG_VAR([PYTHON_CONFIG], [the Python-config program])
dnl python-config's binary name is normally based on the Python interpreter's
dnl binary name (i.e. python2.7 -> python2.7-config)
m4_define([_PYTHON_BASENAME], [`basename $PYTHON`])
m4_ifval([$1],
	[AC_PATH_PROGS(PYTHON_CONFIG, [$1 _PYTHON_BASENAME-config])],
	[AC_PATH_PROG(PYTHON_CONFIG, _PYTHON_BASENAME-config)])
])
m4trace:m4/python.m4:187: -1- AC_DEFUN([PC_PYTHON_VERIFY_VERSION], [m4_define([pc_python_safe_ver], m4_bpatsubsts($2, [\.], [_]))
AC_CACHE_CHECK([if Python $1 '$2'],
    [[pc_cv_python_req_version_]pc_python_safe_ver],
    [AC_LANG_PUSH(Python)[]dnl
     AC_RUN_IFELSE(
        [AC_LANG_PROGRAM([dnl
import sys
], [dnl
    # split strings by '.' and convert to numeric.  Append some zeros
    # because we need at least 4 digits for the hex conversion.
    # map returns an iterator in Python 3.0 and a list in 2.x
    reqver = list(map(int, '$2'.split('.'))) + [[0, 0, 0]]
    reqverhex = 0
    # xrange is not present in Python 3.0 and range returns an iterator
    for i in list(range(4)):
        reqverhex = (reqverhex << 8) + reqver[[i]]
    # the final 8 bits are "0xf0" for final versions, which are all
    # we'll test against, since it's doubtful that a released software
    # will depend on an alpha- or beta-state Python.
    reqverhex += 0xf0
    if sys.hexversion $1 reqverhex:
        sys.exit()
    else:
        sys.exit(1)
])], 
         [[pc_cv_python_req_version_]pc_python_safe_ver=yes], 
         [[pc_cv_python_req_version_]pc_python_safe_ver=no])
     AC_LANG_POP(Python)[]dnl
    ])
AS_IF([test "$[pc_cv_python_req_version_]pc_python_safe_ver" = "no"], [$4], [$3])
])
m4trace:m4/python.m4:226: -1- AC_DEFUN([PC_PYTHON_CHECK_VERSION], [AC_REQUIRE([PC_PROG_PYTHON])[]dnl
AC_CACHE_CHECK([for $1 version], 
    [pc_cv_python_version],
    [AC_LANG_PUSH(Python)[]dnl
     AC_LINK_IFELSE([AC_LANG_PROGRAM([dnl
import sys
], [dnl
    sys.stdout.write(sys.version[[:3]])
])],
                   [pc_cv_python_version=`./conftest`],
                   [AC_MSG_FAILURE([failed to run Python program])])
     AC_LANG_POP(Python)[]dnl
    ])
AC_SUBST([PYTHON_VERSION], [$pc_cv_python_version])
])
m4trace:m4/python.m4:250: -1- AC_DEFUN([PC_PYTHON_CHECK_PREFIX], [AC_REQUIRE([PC_PYTHON_PROG_PYTHON_CONFIG])[]dnl
dnl Try to get it with python-config otherwise do it from within Python
AC_CACHE_CHECK([for Python prefix], [pc_cv_python_prefix],
[if test -x "$PYTHON_CONFIG"; then
    pc_cv_python_prefix=`$PYTHON_CONFIG --prefix 2>&AS_MESSAGE_LOG_FD`
else
    AC_LANG_PUSH(Python)[]dnl
    AC_LINK_IFELSE([AC_LANG_PROGRAM([dnl
import sys
], [dnl
    sys.stdout.write(sys.prefix)
])], [pc_cv_python_prefix=`./conftest`;
      if test $? != 0; then
         AC_MSG_FAILURE([could not determine Python prefix])
      fi],
      [AC_MSG_FAILURE([failed to run Python program])])
    AC_LANG_POP(Python)[]dnl
fi])
AC_SUBST([PYTHON_PREFIX], [$pc_cv_python_prefix])])
m4trace:m4/python.m4:275: -1- AC_DEFUN([PC_PYTHON_CHECK_EXEC_PREFIX], [AC_REQUIRE([PC_PYTHON_PROG_PYTHON_CONFIG])[]dnl
dnl Try to get it with python-config otherwise do it from within Python
AC_CACHE_CHECK([for Python exec-prefix], [pc_cv_python_exec_prefix],
[if test -x "$PYTHON_CONFIG"; then
    pc_cv_python_exec_prefix=`$PYTHON_CONFIG --exec-prefix 2>&AS_MESSAGE_LOG_FD`
else
    AC_LANG_PUSH(Python)[]dnl
    AC_LINK_IFELSE([AC_LANG_PROGRAM([dnl
import sys
], [dnl
    sys.stdout.write(sys.exec_prefix)
])],
        [pc_cv_python_exec_prefix=`./conftest`;
         if test $? != 0; then
            AC_MSG_FAILURE([could not determine Python exec_prefix])
         fi],
         [AC_MSG_FAILURE([failed to run Python program])])
    AC_LANG_POP(Python)[]dnl
fi
])
AC_SUBST([PYTHON_EXEC_PREFIX], [$pc_cv_python_exec_prefix])])
m4trace:m4/python.m4:303: -1- AC_DEFUN([PC_PYTHON_CHECK_INCLUDES], [AC_REQUIRE([PC_PYTHON_PROG_PYTHON_CONFIG])[]dnl
dnl Try to find the headers location with python-config otherwise guess
AC_CACHE_CHECK([for Python includes], [pc_cv_python_includes],
[if test -x "$PYTHON_CONFIG"; then
    pc_cv_python_includes=`$PYTHON_CONFIG --includes 2>&AS_MESSAGE_LOG_FD`
else
    pc_cv_python_includes="[-I$includedir/$_PYTHON_BASENAME]m4_ifdef(PYTHON_ABI_FLAGS,
    PYTHON_ABI_FLAGS,)"
fi
])
AC_SUBST([PYTHON_INCLUDES], [$pc_cv_python_includes])])
m4trace:m4/python.m4:320: -1- AC_DEFUN([PC_PYTHON_CHECK_HEADERS], [AC_REQUIRE([PC_PYTHON_CHECK_INCLUDES])[]dnl
pc_cflags_store=$CPPFLAGS
CPPFLAGS="$CFLAGS $PYTHON_INCLUDES"
AC_CHECK_HEADER([Python.h], [$1], [$2])
CPPFLAGS=$pc_cflags_store
])
m4trace:m4/python.m4:332: -1- AC_DEFUN([PC_PYTHON_CHECK_LIBS], [AC_REQUIRE([PC_PYTHON_PROG_PYTHON_CONFIG])[]dnl
dnl Try to find the lib flags with python-config otherwise guess
AC_CACHE_CHECK([for Python libs], [pc_cv_python_libs],
[if test -x "$PYTHON_CONFIG"; then
    pc_cv_python_libs=`$PYTHON_CONFIG --libs 2>&AS_MESSAGE_LOG_FD`
else
    pc_cv_python_libs="[-l$_PYTHON_BASENAME]m4_ifdef(PYTHON_ABI_FLAGS, PYTHON_ABI_FLAGS,)"
fi
])
AC_SUBST([PYTHON_LIBS], [$pc_cv_python_libs])])
m4trace:m4/python.m4:348: -1- AC_DEFUN([PC_PYTHON_TEST_LIBS], [AC_REQUIRE([PC_PYTHON_CHECK_LIBS])[]dnl
pc_libflags_store=$LIBS
for lflag in $PYTHON_LIBS; do
    case $lflag in
    	 -lpython*@:}@
		LIBS="$LIBS $lflag"
		pc_libpython=`echo $lflag | sed -e 's/^-l//'`
		;;
         *@:}@;;
    esac
done
AC_CHECK_LIB([$pc_libpython], [$1], [$2], [$3])])
m4trace:m4/python.m4:366: -1- AC_DEFUN([PC_PYTHON_CHECK_CFLAGS], [AC_REQUIRE([PC_PYTHON_PROG_PYTHON_CONFIG])[]dnl
dnl Try to find the CFLAGS with python-config otherwise give up
AC_CACHE_CHECK([for Python CFLAGS], [pc_cv_python_cflags],
[if test -x "$PYTHON_CONFIG"; then
    pc_cv_python_cflags=`$PYTHON_CONFIG --cflags 2>&AS_MESSAGE_LOG_FD`
else
    pc_cv_python_cflags=
fi
])
AC_SUBST([PYTHON_CFLAGS], [$pc_cv_python_cflags])])
m4trace:m4/python.m4:382: -1- AC_DEFUN([PC_PYTHON_CHECK_LDFLAGS], [AC_REQUIRE([PC_PYTHON_PROG_PYTHON_CONFIG])[]dnl
dnl Try to find the LDFLAGS with python-config otherwise give up
AC_CACHE_CHECK([for Python LDFLAGS], [pc_cv_python_ldflags],
[if test -x "$PYTHON_CONFIG"; then
    pc_cv_python_ldflags=`$PYTHON_CONFIG --ldflags 2>&AS_MESSAGE_LOG_FD`
else
    pc_cv_python_ldflags=
fi
])
AC_SUBST([PYTHON_LDFLAGS], [$pc_cv_python_ldflags])])
m4trace:m4/python.m4:398: -1- AC_DEFUN([PC_PYTHON_CHECK_EXTENSION_SUFFIX], [AC_REQUIRE([PC_PYTHON_PROG_PYTHON_CONFIG])[]dnl
dnl Try to find the suffix with python-config otherwise give up
AC_CACHE_CHECK([for Python extension suffix], [pc_cv_python_extension_suffix],
[if test -x "$PYTHON_CONFIG"; then
     pc_cv_python_extension_suffix=`$PYTHON_CONFIG --extension-suffix 2>&AS_MESSAGE_LOG_FD`
else
    pc_cv_python_extension_suffix=
fi
])
AC_SUBST([PYTHON_EXTENSION_SUFFIX], [$pc_cv_python_extension_suffix])])
m4trace:m4/python.m4:414: -1- AC_DEFUN([PC_PYTHON_CHECK_ABI_FLAGS], [AC_REQUIRE([PC_PYTHON_PROG_PYTHON_CONFIG])[]dnl
dnl Try to find the ABI flags with python-config otherwise give up
AC_CACHE_CHECK([for Python ABI flags], [pc_cv_python_abi_flags],
[if test -x "$PYTHON_CONFIG"; then
     pc_cv_python_abi_flags=`$PYTHON_CONFIG --abiflags 2>&AS_MESSAGE_LOG_FD`
else
    pc_cv_python_abi_flags=
fi
])
AC_SUBST([PYTHON_ABI_FLAGS], [$pc_cv_python_abi_flags])])
m4trace:m4/python.m4:431: -1- AC_DEFUN([PC_PYTHON_CHECK_PLATFORM], [AC_REQUIRE([PC_PROG_PYTHON])[]dnl
dnl Get the platform from within Python (sys.platform)
AC_CACHE_CHECK([for Python platform], [pc_cv_python_platform],
    [AC_LANG_PUSH(Python)[]dnl
     AC_LINK_IFELSE([AC_LANG_PROGRAM([dnl
import sys
], [dnl
    sys.stdout.write(sys.platform)
])], [pc_cv_python_platform=`./conftest`;
     if test $? != 0; then
        AC_MSG_FAILURE([could not determine Python platform])
     fi],
     [AC_MSG_FAILURE([failed to run Python program])])
    AC_LANG_POP(Python)[]dnl
   ])
AC_SUBST([PYTHON_PLATFORM], [$pc_cv_python_platform])
])
m4trace:m4/python.m4:455: -1- AC_DEFUN([PC_PYTHON_CHECK_SITE_DIR], [AC_REQUIRE([PC_PROG_PYTHON])AC_REQUIRE([PC_PYTHON_CHECK_PREFIX])[]dnl
AC_CACHE_CHECK([for Python site-packages directory],
    [pc_cv_python_site_dir],
    [AC_LANG_PUSH(Python)[]dnl
    if test "x$prefix" = xNONE
     then
       pc_py_prefix=$ac_default_prefix
     else
       pc_py_prefix=$prefix
     fi
     AC_LINK_IFELSE([AC_LANG_PROGRAM([dnl
import sys
from platform import python_implementation
# sysconfig in CPython 2.7 doesn't work in virtualenv
# <https://github.com/pypa/virtualenv/issues/118>
try:
    import sysconfig
except:
    can_use_sysconfig = False
else:
    can_use_sysconfig = True
if can_use_sysconfig:
    if python_implementation() == "CPython" and sys.version[[:3]] == '2.7':
        can_use_sysconfig = False
if not can_use_sysconfig:        
    from distutils import sysconfig
    sitedir = sysconfig.get_python_lib(False, False, prefix='$pc_py_prefix')
else:
    sitedir = sysconfig.get_path('purelib', vars={'base':'$pc_py_prefix'})
], [dnl
    sys.stdout.write(sitedir)
])], [pc_cv_python_site_dir=`./conftest`],
     [AC_MSG_FAILURE([failed to run Python program])])
     AC_LANG_POP(Python)[]dnl
     case $pc_cv_python_site_dir in
     $pc_py_prefix*)
       pc__strip_prefix=`echo "$pc_py_prefix" | sed 's|.|.|g'`
       pc_cv_python_site_dir=`echo "$pc_cv_python_site_dir" | sed "s,^$pc__strip_prefix/,,"`
       ;;
     *)
       case $pc_py_prefix in
         /usr|/System*) ;;
         *)
	  pc_cv_python_site_dir=lib/python$PYTHON_VERSION/site-packages
	  ;;
       esac
       ;;
     esac
     ])
AC_SUBST([pythondir], [\${prefix}/$pc_cv_python_site_dir])])
m4trace:m4/python.m4:510: -1- AC_DEFUN([PC_PYTHON_SITE_PACKAGE_DIR], [AC_REQUIRE([PC_PYTHON_CHECK_SITE_DIR])[]dnl
AC_SUBST([pkgpythondir], [\${pythondir}/$PACKAGE_NAME])])
m4trace:m4/python.m4:518: -1- AC_DEFUN([PC_PYTHON_CHECK_EXEC_DIR], [AC_REQUIRE([PC_PROG_PYTHON])AC_REQUIRE([PC_PYTHON_CHECK_EXEC_PREFIX])[]dnl
  AC_CACHE_CHECK([for Python extension module directory],
    [pc_cv_python_exec_dir],
    [AC_LANG_PUSH(Python)[]dnl
    if test "x$pc_cv_python_exec_prefix" = xNONE
     then
       pc_py_exec_prefix=$pc_cv_python_prefix
     else
       pc_py_exec_prefix=$pc_cv_python_exec_prefix
     fi
     AC_LINK_IFELSE([AC_LANG_PROGRAM([dnl
import sys
from platform import python_implementation
# sysconfig in CPython 2.7 doesn't work in virtualenv
# <https://github.com/pypa/virtualenv/issues/118>
try:
    import sysconfig
except:
    can_use_sysconfig = False
else:
    can_use_sysconfig = True
if can_use_sysconfig:
    if python_implementation() == "CPython" and sys.version[[:3]] == '2.7':
        can_use_sysconfig = False
if not can_use_sysconfig:        
    from distutils import sysconfig
    sitedir = sysconfig.get_python_lib(False, False, prefix='$pc_py__exec_prefix')
else:
    sitedir = sysconfig.get_path('purelib', vars={'platbase':'$pc_py_exec_prefix'})
], [dnl
    sys.stdout.write(sitedir)
])], [pc_cv_python_exec_dir=`./conftest`],
     [AC_MSG_FAILURE([failed to run Python program])])
     AC_LANG_POP(Python)[]dnl
     case $pc_cv_python_exec_dir in
     $pc_py_exec_prefix*)
       pc__strip_prefix=`echo "$pc_py_exec_prefix" | sed 's|.|.|g'`
       pc_cv_python_exec_dir=`echo "$pc_cv_python_exec_dir" | sed "s,^$pc__strip_prefix/,,"`
       ;;
     *)
       case $pc_py_exec_prefix in
         /usr|/System*) ;;
         *)
	   pc_cv_python_exec_dir=lib/python$PYTHON_VERSION/site-packages
	   ;;
       esac
       ;;
     esac
    ])
AC_SUBST([pyexecdir], [\${exec_prefix}/$pc_cv_python_pyexecdir])])
m4trace:m4/python.m4:574: -1- AC_DEFUN([PC_PYTHON_EXEC_PACKAGE_DIR], [AC_REQUIRE([PC_PYTHON_CHECK_EXEC_DIR])[]dnl
AC_SUBST([pkgpyexecdir], [\${pyexecdir}/$PACKAGE_NAME])])
m4trace:m4/python.m4:587: -1- AC_DEFUN([PC_PYTHON_CHECK_MODULE], [AC_REQUIRE([PC_PROG_PYTHON])[]dnl
m4_define([pc_python_safe_mod], m4_bpatsubsts($1, [\.], [_]))
AC_CACHE_CHECK([for Python '$1' library],
    [[pc_cv_python_module_]pc_python_safe_mod],
    [AC_LANG_PUSH(Python)[]dnl
     AC_RUN_IFELSE(
	[AC_LANG_PROGRAM([dnl
import sys
try:
    import $1
except:
    sys.exit(1)
else:
    sys.exit(0)
], [])],
	[[pc_cv_python_module_]pc_python_safe_mod="yes"],
	[[pc_cv_python_module_]pc_python_safe_mod="no"])
     AC_LANG_POP(Python)[]dnl
    ])
AS_IF([test "$[pc_cv_python_module_]pc_python_safe_mod" = "no"], [$3], [$2])
])
m4trace:m4/python.m4:615: -1- AC_DEFUN([PC_PYTHON_CHECK_FUNC], [AC_REQUIRE([PC_PROG_PYTHON])[]dnl
m4_define([pc_python_safe_mod], m4_bpatsubsts($1, [\.], [_]))
AC_CACHE_CHECK([for Python m4_ifnblank($1, '$1.$2()', '$2()') function],
    [[pc_cv_python_func_]pc_python_safe_mod[_$2]],
    [AC_LANG_PUSH(Python)[]dnl
     AC_RUN_IFELSE(
	[AC_LANG_PROGRAM([dnl
import sys
m4_ifnblank([$1], [dnl
try:
    import $1
except:
    sys.exit(1)
], [])], 
[
m4_ifnblank([$1], [
    try:
        $1.$2($3)], [
    try:
        $2($3)])
    except:
        sys.exit(1)
    else:
        sys.exit(0)
])],
	[[pc_cv_python_func_]pc_python_safe_mod[_$2]="yes"],
	[[pc_cv_python_func_]pc_python_safe_mod[_$2]="no"])
     AC_LANG_POP(Python)[]dnl
    ])
AS_IF([test "$[pc_cv_python_func_]pc_python_safe_mod[_$2]" = "no"], [$5], [$4])
])
m4trace:configure.ac:91: -1- PC_INIT([2.7], [3.3.1])
m4trace:configure.ac:91: -1- PC_PROG_PYTHON([], [2.7], [3.3.1])
m4trace:configure.ac:91: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:91: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:91: -1- PC_PYTHON_VERIFY_VERSION([>=], [pc_min_ver], [], [AC_MSG_FAILURE([No compatible Python interpreter found. If you're sure that you have one, try setting the PYTHON environment variable to the location of the interpreter.])])
m4trace:configure.ac:91: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [../../lib/autoconf/general.m4:2759: AC_RUN_IFELSE is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
m4/python.m4:187: PC_PYTHON_VERIFY_VERSION is expanded from...
m4/python.m4:117: PC_INIT is expanded from...
configure.ac:91: the top level])
m4trace:configure.ac:91: -1- PC_PYTHON_VERIFY_VERSION([<=], [pc_max_ver], [], [AC_MSG_FAILURE([No compatible Python interpreter found. If you're sure that you have one, try setting the PYTHON environment variable to the location of the interpreter.])])
m4trace:configure.ac:91: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [../../lib/autoconf/general.m4:2759: AC_RUN_IFELSE is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
../../lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
m4/python.m4:187: PC_PYTHON_VERIFY_VERSION is expanded from...
m4/python.m4:117: PC_INIT is expanded from...
configure.ac:91: the top level])
m4trace:configure.ac:141: -2- m4_pattern_allow([^VIRTUALENV$])
m4trace:configure.ac:145: -2- m4_pattern_allow([^VIRTUALENV$])
m4trace:configure.ac:146: -1- m4_pattern_allow([^VIRTUALENV_FLAGS$])
m4trace:configure.ac:170: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:171: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:171: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:171: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:241: -1- PC_PYTHON_SITE_PACKAGE_DIR
m4trace:configure.ac:241: -1- PC_PYTHON_CHECK_SITE_DIR
m4trace:configure.ac:241: -1- PC_PYTHON_CHECK_PREFIX
m4trace:configure.ac:241: -1- PC_PYTHON_PROG_PYTHON_CONFIG
m4trace:configure.ac:241: -1- m4_pattern_allow([^PYTHON_CONFIG$])
m4trace:configure.ac:241: -1- m4_pattern_allow([^PYTHON_CONFIG$])
m4trace:configure.ac:241: -1- m4_pattern_allow([^PYTHON_PREFIX$])
m4trace:configure.ac:241: -1- m4_pattern_allow([^pythondir$])
m4trace:configure.ac:241: -1- m4_pattern_allow([^pkgpythondir$])
m4trace:configure.ac:257: -1- PC_PYTHON_EXEC_PACKAGE_DIR
m4trace:configure.ac:257: -1- PC_PYTHON_CHECK_EXEC_DIR
m4trace:configure.ac:257: -1- PC_PYTHON_CHECK_EXEC_PREFIX
m4trace:configure.ac:257: -1- m4_pattern_allow([^PYTHON_EXEC_PREFIX$])
m4trace:configure.ac:257: -1- m4_pattern_allow([^pyexecdir$])
m4trace:configure.ac:257: -1- m4_pattern_allow([^pkgpyexecdir$])
m4trace:configure.ac:403: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:403: -1- m4_pattern_allow([^LTLIBOBJS$])
